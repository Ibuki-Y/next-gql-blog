# Fragment #
fragment Post on PostModel {
  id
  title
  type
  publishDate
  emoji
  contentPath
}

fragment Profile on ProfileModel {
  handleName
  position
  summary
  twitter
  github
}

fragment Impression on ImpressionModel {
  id
  sticker
  comment
  postId
  twitterId
  createdAt
}

fragment PageInfo on PageInfoModel {
  startCursor
  endCursor
  hasNextPage
  hasPreviousPage
}

query PostIndexPage {
  # Aliases #
  articles: posts(type: ["article"]) {
    ...Post
  }
  diaries: posts(type: ["diary"]) {
    ...Post
  }
  profile {
    ...Profile
  }
}

query PostDetailPage($id: String) {
  post: findPostById(id: $id) {
    ...Post
    # bodyMarkdown
  }
}

# query PostDetailPage($contentPath: String) {
#   post: findPost(contentPath: $contentPath) {
#     ...Post
#     # bodyMarkdown
#   }
# }

query PostsAllPage($cursor: String, $first: Int, $last: Int) {
  allPublished: postsConnection(cursor: $cursor, first: $first, last: $last) {
    nodes {
      ...Post
    }
    pageInfo {
      ...PageInfo
    }
  }
}

query ImpressionContainer($postId: String!) {
  impressions(postId: $postId, sortAs: "asc") {
    ...Impression
  }
}

mutation Impression($input: CreateImpressionInput!) {
  addImpression(input: $input) {
    ...Impression
  }
}
